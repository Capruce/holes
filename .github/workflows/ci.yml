name: 'CI/CD'

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main

env:
  pythonVersion: "3.10"


jobs:
  mypy:
    name: Mypy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -e .[test]

      - name: Run Mypy
        run: mypy src/holes tests

  black:
    name: Black
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -e .[test]

      - name: Run Black
        run: black src/holes tests --check --diff

  isort:
    name: isort
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -e .[test]

      - name: Run isort
        run: isort src/holes tests --check-only

  pytest:
    name: pytest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -e .[test]

      - name: Run pytest
        run: pytest tests
